name: Continuous Integration
on:
 push:
  paths-ignore:
    - 'documentation/**'
    - 'README.md'
 pull_request:
  paths-ignore:
    - 'documentation/**'
    - 'README.md'
jobs:
 build:
  name: Build and test
  runs-on: ubuntu-latest
  steps:
  -
    name: Checkout 
    uses: actions/checkout@v2
  -
    name: Build test container
    run: docker build --target test --tag my-test-image .
  -
    name: Run unit/integration tests
    run: docker run --env-file .env.test my-test-image tests
  -
    name: Run e2e tests
    run: docker run -e MONGO_CONNECTION_STRING=${{ secrets.MONGO_CONNECTION_STRING }} -e SECRET_KEY=${{ secrets.SECRET_KEY }} my-test-image tests_e2e
 publish:
  name: Publish build artifacts and deploy
  runs-on: ubuntu-latest
  needs: build
  if: github.ref == 'refs/heads/exercise-8'
  steps:
  -
    name: Checkout 
    uses: actions/checkout@v2
  -
    name: Login to docker hub
    run: echo ${{ secrets.DOCKER_HUB_PASSWORD }} | docker login -u ${{ secrets.DOCKER_HUB_USER }} --password-stdin
  -
    name: Build image 
    run: docker build --target production --tag ${{secrets.DOCKER_HUB_USER}}/devops-todoapp:$GITHUB_SHA .
  -
    name: Push image
    run: docker push ${{secrets.DOCKER_HUB_USER}}/devops-todoapp:$GITHUB_SHA
  -
    name: Tag build image
    run: docker tag ${{secrets.DOCKER_HUB_USER}}/devops-todoapp:$GITHUB_SHA registry.heroku.com/todo-app-devopscourse/web
  -
    name: Setup heroku login
    run: |
      cat >~/.netrc <<EOF
        machine api.heroku.com
          login ${{ secrets.HEROKU_EMAIL }}
          password ${{ secrets.HEROKU_API_KEY }}
        machine git.heroku.com
          login ${{ secrets.HEROKU_EMAIL }}
          password ${{ secrets.HEROKU_API_KEY }}
      EOF
  -
    name: Login to heroku container
    run: heroku container:login
  -
    name: Push heroku tagged image
    run: docker push registry.heroku.com/todo-app-devopscourse/web
  -
    name: Release to heroku
    run: heroku container:release web -a todo-app-devopscourse
